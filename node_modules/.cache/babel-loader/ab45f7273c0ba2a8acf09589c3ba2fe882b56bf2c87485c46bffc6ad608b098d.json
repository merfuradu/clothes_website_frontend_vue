{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { createStore } from 'vuex';\nimport router from '../routes';\nfunction isTokenExpired(token) {\n  if (!token) return true;\n  const expiry = new Date(JSON.parse(atob(token.split('.')[1])).exp * 1000);\n  return expiry < new Date();\n}\nconst token = localStorage.getItem(\"accessToken\");\nexport const store = createStore({\n  state: {\n    isLoggedIn: !!token\n  },\n  getters: {\n    loginState: state => {\n      return state.isLoggedIn;\n    }\n  },\n  mutations: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n      localStorage.removeItem(\"accessToken\");\n      router.push(\"/\");\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, expires_in) {\n      if (isTokenExpired(token)) {\n        commit(\"logout\");\n        return;\n      }\n      setTimeout(() => {\n        commit(\"logout\");\n      }, expires_in);\n      commit(\"login\");\n    },\n    logout({\n      commit\n    }) {\n      commit(\"logout\");\n    }\n  }\n});","map":{"version":3,"names":["createStore","router","isTokenExpired","token","expiry","Date","JSON","parse","atob","split","exp","localStorage","getItem","store","state","isLoggedIn","getters","loginState","mutations","login","logout","removeItem","push","actions","commit","expires_in","setTimeout"],"sources":["C:/Users/Merfu/Desktop/Vue-Register-Login-Project/src/store/store.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport router from '../routes';\r\n\r\nfunction isTokenExpired(token) {\r\n  if (!token) return true; \r\n  const expiry = new Date(JSON.parse(atob(token.split('.')[1])).exp * 1000);\r\n  return expiry < new Date(); \r\n}\r\n\r\nconst token = localStorage.getItem(\"accessToken\");\r\n\r\nexport const store = createStore({\r\n  state: {\r\n    isLoggedIn: !!token, \r\n  },\r\n  getters: {\r\n    loginState: (state) => {\r\n      return state.isLoggedIn;\r\n    },\r\n  },\r\n  mutations: {\r\n    login(state) {\r\n      state.isLoggedIn = true;\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n      localStorage.removeItem(\"accessToken\");\r\n      router.push(\"/\");\r\n    },\r\n  },\r\n  actions: {\r\n    login({ commit }, expires_in) {\r\n      if (isTokenExpired(token)) {\r\n        commit(\"logout\");\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        commit(\"logout\");\r\n      }, expires_in);\r\n      commit(\"login\");\r\n    },\r\n    logout({ commit }) {\r\n      commit(\"logout\");\r\n    },\r\n  },\r\n});\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,MAAM,MAAM,WAAW;AAE9B,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC7B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EACvB,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,GAAG,IAAI,CAAC;EACzE,OAAON,MAAM,GAAG,IAAIC,IAAI,CAAC,CAAC;AAC5B;AAEA,MAAMF,KAAK,GAAGQ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AAEjD,OAAO,MAAMC,KAAK,GAAGb,WAAW,CAAC;EAC/Bc,KAAK,EAAE;IACLC,UAAU,EAAE,CAAC,CAACZ;EAChB,CAAC;EACDa,OAAO,EAAE;IACPC,UAAU,EAAGH,KAAK,IAAK;MACrB,OAAOA,KAAK,CAACC,UAAU;IACzB;EACF,CAAC;EACDG,SAAS,EAAE;IACTC,KAAKA,CAACL,KAAK,EAAE;MACXA,KAAK,CAACC,UAAU,GAAG,IAAI;IACzB,CAAC;IACDK,MAAMA,CAACN,KAAK,EAAE;MACZA,KAAK,CAACC,UAAU,GAAG,KAAK;MACxBJ,YAAY,CAACU,UAAU,CAAC,aAAa,CAAC;MACtCpB,MAAM,CAACqB,IAAI,CAAC,GAAG,CAAC;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACPJ,KAAKA,CAAC;MAAEK;IAAO,CAAC,EAAEC,UAAU,EAAE;MAC5B,IAAIvB,cAAc,CAACC,KAAK,CAAC,EAAE;QACzBqB,MAAM,CAAC,QAAQ,CAAC;QAChB;MACF;MACAE,UAAU,CAAC,MAAM;QACfF,MAAM,CAAC,QAAQ,CAAC;MAClB,CAAC,EAAEC,UAAU,CAAC;MACdD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACDJ,MAAMA,CAAC;MAAEI;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,QAAQ,CAAC;IAClB;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}